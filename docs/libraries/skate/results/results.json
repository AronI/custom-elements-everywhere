{
    "summary": {
        "success": 24,
        "failed": 6,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 91,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 6,
            "passed": 8
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "45121290",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 36031,
                    "netTime": 681,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928701450,
                    "endTime": 1528928701467,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 170,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928703154,
                    "endTime": 1528928703325,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 208,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928703593,
                    "endTime": 1528928703818,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928704081,
                    "endTime": 1528928704108,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928705392,
                    "endTime": 1528928705407,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928706884,
                    "endTime": 1528928706891,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928708548,
                    "endTime": 1528928708551,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928709249,
                    "endTime": 1528928709261,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 34,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928709303,
                    "endTime": 1528928709338,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928709466,
                    "endTime": 1528928709479,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928709810,
                    "endTime": 1528928710117,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928710211,
                    "endTime": 1528928710235,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 134,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:2505:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:6032:13",
                        "assertEql@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:7142:5",
                        "methodWrapper@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:5162:18",
                        "@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13787:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928710263,
                    "endTime": 1528928710416,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 21,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:2505:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:6032:13",
                        "assertEql@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:7142:5",
                        "methodWrapper@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:5162:18",
                        "@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13801:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928710693,
                    "endTime": 1528928710714,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:2505:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:6032:13",
                        "assertEql@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:7142:5",
                        "methodWrapper@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:5162:18",
                        "@base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13815:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928711123,
                    "endTime": 1528928711127,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "60378528",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/67.0.3396.87 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.13.4)",
                "state": 5,
                "lastResult": {
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1557,
                    "netTime": 59,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928737913,
                    "endTime": 1528928737928,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928737941,
                    "endTime": 1528928737946,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928737954,
                    "endTime": 1528928737957,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928737959,
                    "endTime": 1528928737964,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928737969,
                    "endTime": 1528928737970,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738024,
                    "endTime": 1528928738026,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738036,
                    "endTime": 1528928738038,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738043,
                    "endTime": 1528928738088,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738111,
                    "endTime": 1528928738130,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738138,
                    "endTime": 1528928738141,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738146,
                    "endTime": 1528928738149,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1528928738154,
                    "endTime": 1528928738155,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13787:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928738164,
                    "endTime": 1528928738179,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13801:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928738185,
                    "endTime": 1528928738187,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?bd57ada5aaf1b9cce971c1443da45d26d1ebe844:13815:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1528928738192,
                    "endTime": 1528928738194,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "skatejs",
        "version": "5.1.1"
    }
}