{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "29387968",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/66.0.3359.181 Safari/537.36",
                "name": "HeadlessChrome 66.0.3359 (Mac OS X 10.13.4)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1203,
                    "netTime": 376,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 30,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248404,
                    "endTime": 1527003248554,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248558,
                    "endTime": 1527003248611,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 55,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248652,
                    "endTime": 1527003248712,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 93,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248713,
                    "endTime": 1527003248813,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248817,
                    "endTime": 1527003248841,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248910,
                    "endTime": 1527003248916,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003248916,
                    "endTime": 1527003249039,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003249046,
                    "endTime": 1527003249055,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "AssertionError: expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49369:34)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1527003249055,
                    "endTime": 1527003249070,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "AssertionError: expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49378:34)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1527003249071,
                    "endTime": 1527003249077,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 86,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49392:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003249077,
                    "endTime": 1527003249170,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49404:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003249181,
                    "endTime": 1527003249192,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49416:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003249193,
                    "endTime": 1527003249209,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 74,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49428:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003249210,
                    "endTime": 1527003249287,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "AssertionError: expected 'false' to deeply equal 'true'",
                        "    at Context.<anonymous> (base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49440:49)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003249294,
                    "endTime": 1527003249310,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "78637773",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1682,
                    "netTime": 252,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003254630,
                    "endTime": 1527003254735,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003254915,
                    "endTime": 1527003254938,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 27,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003254943,
                    "endTime": 1527003255008,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 29,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003255324,
                    "endTime": 1527003255368,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003255380,
                    "endTime": 1527003255414,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003255416,
                    "endTime": 1527003255666,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003255669,
                    "endTime": 1527003255690,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1527003255692,
                    "endTime": 1527003255715,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49369:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1527003255717,
                    "endTime": 1527003255758,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 30,
                    "log": [
                        "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49378:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected undefined to deeply equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1527003255929,
                    "endTime": 1527003255973,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 16,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49392:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003255976,
                    "endTime": 1527003256009,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 63,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49404:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003256012,
                    "endTime": 1527003256091,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49416:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003256138,
                    "endTime": 1527003256154,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49428:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003256158,
                    "endTime": 1527003256186,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "expected 'false' to deeply equal 'true'",
                        "AssertionError@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:1459:13",
                        "module.exports/Assertion.prototype.assert@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:41799:13",
                        "assertEql@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:42909:5",
                        "methodWrapper@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:40929:18",
                        "@base/tests.webpack.js?888918fcf6187eea10b0a81967365c5ec0f19e91:49440:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "AssertionError",
                            "message": "expected 'false' to deeply equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1527003256189,
                    "endTime": 1527003256214,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.8"
    }
}